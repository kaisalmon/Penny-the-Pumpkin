pico-8 cartridge // http://www.pico-8.com
version 36
__lua__
function init()
t=0
dust={}
coins_collected=0
player = {
	on_land=on_land,
	x=0,
	y=0,
	dx=0,
	dy=0,
	w=8,
	bounce=0,
	size=14,
	tsize=14,
	h={
		x=0,
		y=0,
		dx=0,
		dy=0,
		w=8,
	},
	last_gnded=0,
	was_gnded=false,
}
jump_btn = nil
jump_btn_down = btn(4)
cam_x = player.x-64
cam_y = player.y-64
died_at=nil
revived_at=nil
fire_at=nil
load_level(level1)
hud_y=-25
coin_at=nil
g1=0.1
g2=0.25
air=0.01
max_jump_height=8*4.1
player.jumpf=-3
--debug="test"
end


function draw_bounding_box(parallelogram)
  local box = get_bounding_box(parallelogram)
  
  -- draw the top line
  line(box.x, box.y, box.x + box.w, box.y, 8)
  
  -- draw the right line
  line(box.x + box.w, box.y, box.x + box.w, box.y + box.h, 8)
  
  -- draw the bottom line
  line(box.x + box.w, box.y + box.h, box.x, box.y + box.h, 8)
  
  -- draw the left line
  line(box.x, box.y + box.h, box.x, box.y, 8)
end

function _draw()
	local stat_1 = stat(1)

	cls(1)
	
	pal()
	palt(0,false)
	palt(1,true)
	pal(1,138 ,1)
	pal(5,147, 1)
	
	pal(blocks.pal or {1,2,3,4,
						5,6,7,8,
						9,10,11,12,
						13,14,15,16}, 1)
	--if(stat(7) != 60) pal(1,8,1)

	camera(cam_x,cam_y)
	draw_blocks()	
	flicker = revived_at and 
		revived_at + 2 > time() and 
		time()%.3>.15
		foreach(enemies, function(e)
		skw_spr(
			e.x,
			e.y,
			e.h.x,
			e.h.y,
			e.w+4,
			e.size,
			3
		)
	end)
		
	if died_at == nil and not flicker then 
		skw_spr(
			player.x,
			player.y,
			player.h.x,
			player.h.y-4,
			player.w+4,
			player.size
		)
	end
	
	foreach(coins, function(c)
		local dw = sin(t)*16
		sspr(24,0,16,16,c.x-dw/2,c.y-16,dw,16)
	end)
	draw_dust()
	camera()
	
	local draw_cpu_usage = stat(1) - stat_1

	if debug then
		cursor(1,1)
		print(stat(7).."fps",7)
		print(flr((stat(0)/20)).."% mem",7)
		print(flr(update_cpu_usage*100).."% cpu (update)")
		print(flr((draw_cpu_usage)*100).."% cpu (draw)",7)
		if(profile_cpu_usage !=0)		print((flr(profile_cpu_usage*1000)/10).."% cpu (profile)",7)
	
		print(flr((stat(1))*100).."% cpu (total)",7)
		print(debug)
	end
	
	camera(0,hud_y)
	local hud_h=25
	for i = 0,16 do
		spr(32,i*8,128-hud_h)
	end
	rectfill(0,128+8-hud_h,128,128,0)
	sspr(24,0,16,16,3,109,16,16)

	print(coins_collected.."/3",22,115,7)
end

function _update60()
	profile_cpu_usage=0
	profile_calls=0
	local stat_1 = stat(1)
	t+=1/60
	
	local thud_y = -25
	if coin_at and coin_at+2>time() then
		thud_y = 0
	end
	if hud_y > thud_y then
		hud_y -= 1
	elseif hud_y < thud_y then
		hud_y += 1
	end
	
	
	if died_at and died_at < time() - 2 then
		load_level(blocks)
		died_at = nil
		revived_at = time()
	end

	if not died_at then
		update_player()
	end
	
	for e in all(enemies) do
		if rnd() < 0.01 or e.dir == nil then
			local r=rnd()
			if r<0.33 then 
				e.dir=-1
			elseif(r<0.66) then
				e.dir=1
			else
				e.dir= player.x - e.x
			end
		end
		if e.maxx and e.x > e.maxx then
			e.dir=-1
		elseif e.minx and e.x < e.minx then
			e.dir=1
		end
		update_character(e, e.dir, rnd() < 0.03)
		if not died_at and do_characters_overlap(e, player) then
			local th = 2+abs(player.dy)+abs(e.dy)
			if e.h.y+th>player.y then
				sfx(0)
				player.y=e.h.y-2
				player.dy-=3.5
				player.h.dy-=5.5
				e.h.dy += 2
				e.dy += 2
			else
				die()
			end
		end
	end
	
	foreach(coins, function(c)
		if player.x>c.x-8
		and player.x<c.x+8
		and player.h.y>c.y-16
		and player.h.y<c.y then
			del(coins,c)
			sfx(7)
			dset(c.id, 1)
			debug=c.id
			coins_collected+=1
			coin_at=time()
			for i = 0,15 do
				add_dust(c,rnd(),1,true,55,"coin")
			end
		end
	end)
	
	for b in all(blocks) do
		if(b.update)b.update(b)
	end
	
	cam_x += ( player.x-cam_x-64)
		*0.1
	cam_y += ( player.y-cam_y-64)
	*0.1
		
	if true then
		if cam_x > player.x - 64 + 50 then
			cam_x = player.x - 64 + 50
		end
		if cam_x < player.x - 64 - 50 then
			cam_x = player.x - 64 - 50
		end
		if cam_y > player.y - 64 + 50 then
			cam_y = player.y - 64 + 50
		end
		if cam_y < player.y - 64 - 50 then
			cam_y = player.y - 64 - 50
		end
		
		if cam_x < cam_bounds[1] then
			cam_x = cam_bounds[1]
		end
		if cam_x > cam_bounds[2] then
			cam_x = cam_bounds[2]
		end
		if cam_y < cam_bounds[3] then
			cam_y = cam_bounds[3]
		end
		if cam_y > cam_bounds[4] then
			cam_y = cam_bounds[4]
		end
	end
	update_dust()
	update_cpu_usage = stat(1) - stat_1
end

function update_character(ch, move_dir, jump, squeeze)
	if (move_dir < 0) ch.dx -= ch.speed or .2
	if (move_dir > 0) ch.dx += ch.speed or .2

	b0, t0 = is_solid({
		x=ch.x - ch.w/2,
		y=ch.y+0.5
	}, true)
	b1,t1 = is_solid({
		x=ch.x,
		y=ch.y+0.5
	}, true)
	b2, t2= center_b or is_solid({
		x=ch.x+ ch.w/2,
		y=ch.y+0.5
	}, true)
	ch.block = b1 or b0 or b2
	ch.tile = t1 or t0 or t2

	ch.gnded = not not ch.block
	if ch.gnded then
		ch.last_gnded=time()
	else
		local g = (ch.dy < 0 
			and jump_btn_down)	
			and g1
			 or g2
		ch.dy+=g
		ch.h.dy+=g
	end
	ch.was_gnded = ch.gnded

	if jump and 
		ch.dy >= 0 and
		ch.last_gnded != nil and
		time()-ch.last_gnded <= 0.2
	then
		ch.last_gnded=nil
		ch.dy = ch.jumpf or -3.5
		ch.h.dy = ch.jumpf and ch.jumpf*1.2 or -5.5
		for i=0,20 do add_dust(ch, -1,4) end
		if ch.x > cam_x
		and ch.x < cam_x + 128
		and ch.y > cam_y
		and ch.y < cam_y + 128
	 then 
			sfx(0)
		end
	end

	ch.dx *= 0.9
	ch.dy -= sgn(ch.dy)
		 * air
			* ch.dy 
			* ch.dy
	ch.h.dx *= 0.96
	ch.h.dy *= 0.95

	
 local h = ch.size * (squeeze or 1)
	if(not ch.gnded) h=ch.size
	local fh=0.015
	if(ch.size < 12)fh*=2 
	
	local fyh = (ch.y - ch.h.y - h) 
		* fh * 3
	local fxh = (ch.x - ch.h.x) 
		* fh
		
	ch.h.dx += fxh
	ch.h.dy += fyh
	ch.dx -= fxh
	
	local min_h =ch.size/4+1
	if ch.h.y + min_h > ch.y then
		if(ch.h.dy>0)ch.h.dy *= -1
		ch.h.y = ch.y-min_h
		eject_particle(ch.h, false, 0.5, 1)
		if (ch.y != ch.h.y+min_h) then
			ch.y = ch.h.y+min_h
			ch.dy *= -1 * ch.bounce
			if is_solid(ch, true) then
				--todo be better
				if(ch == player) die()
			end
		end
	end
	
	update_character_w(ch)
	check_for_squeeze(ch)
	update_particle(ch, ch.dy >= 0)
	update_particle(ch.h, false)
	check_for_squeeze(ch)

	local max_h = h*1.5
	if ch.h.y + max_h < ch.y then
		ch.h.y = ch.y-max_h
		eject_particle(ch.h, false, 0.5, 1)
		--todo make better
		if ch == player 
		and ch.h.y + 1.5*max_h < ch.y then
			die()
		end
	end	

	local delta_s = ch.tsize - ch.size
	ch.size += delta_s*0.2
	check_for_squeeze(ch)
	
end

function get_bounding_box(p)
 	
		w=p.w-abs(p.x-p.h.x)
		x=(p.x+p.h.x-w)/2
		y=p.y
		h=p.h.y-p.y
  return {x = x, y = y, w = w , h = h}
end

function do_characters_overlap(p1, p2)
  local bbox1 = get_bounding_box(p1)
  local bbox2 = get_bounding_box(p2)
  return not (bbox1.x + bbox1.w < bbox2.x or bbox2.x + bbox2.w < bbox1.x or bbox1.y + bbox1.h > bbox2.y or bbox2.y + bbox2.h > bbox1.y)
end


function update_player()
	if not jump_btn_down and btn(4) then
	 jump_btn = time()
	end
	jump_btn_down = btn(4)

	update_character(player, 
		btn(0) and -1 or btn(1) and 1 or 0,
		jump_btn_down and jump_btn and jump_btn >= time() - 0.25,
		(btn(3) and .5 or btn(2) and 1.5 or 1)
	)

	if fget(player.tile, 7) then
		die()
	end

	if player.tile == 35 then
		fire()
	end

	 
	if player.gnded and abs(player.dx) > 0.4 then
		if(rnd()<.3)add_dust(player)
	end

	
	if player.y > 8*cam_bounds[4]+32 then
		--die()
	end
end

function add_dust(ch, dy, dx,fullh, t)
	if(#dust > 100 or stat(7)<60) then
		deli(dust, 1)
	end
	add(dust, {
			x=ch.x
				+(rnd()-.5)*ch.w,
			y=ch.y - (fullh and rnd()*20 or 0) ,
			c=11,
			dx=(dx or 1)*(rnd()-.5)-.1*ch.dx,
			dy=2*(dy or -.7)*(rnd()*.5+.5),
			t=(t or 30)+flr(30*rnd()),
			bounce=.7
		})
end

function update_character_w(ch)
	h = ch.y-ch.h.y
	s= ch.size
	ch.w = s*s/h - 2
	local max_w = 25/16*ch.size
	if (ch.w>max_w) ch.w=max_w
	ch.h.w = ch.w
end

function skw_spr(x,y,hx,hy, w, size, u)

	h = y-hy+1
	if (h<0)h=0
	
	for i=0,h do
		s = i/h*16
		sw= (hx-x)*(h-i)/h
		local  v, dv = s/8, 1/w*2

		tline(x-w/2 + sw,y+i-h,
								x+w/2 + sw,y+i-h,
								u, v,
							 dv)
	end

end

function on_land(p)
		if(p.dy > 2) sfx(1)
end

function die()
	if died_at then
		return
	end
	sfx(4)
	died_at = time()
	for i = 0,15 do
		add_dust(player, player.dx,player.dy,true,55)
	end
end

function fire()
	sfx(3)
	
	if fire_at and fire_at > time()-1 then
		die()
	else
		player.dy -= 5
		player.h.dy -= 8
		fire_at=time()
	end
end

-->8
function check_for_squeeze(p)
	if(p != player)return
	if(is_solid({
			y=p.y,
			x=p.x,
	})) then 
		return false
	end
	while (is_solid({
			y=p.y,
			x=p.x+p.w/2+2,
		}) and is_solid({
			y=p.y,
			x=p.x-p.w/2-1,
		})) or (
		is_solid({
			y=p.h.y,
			x=p.h.x+p.w/2+2,
		}) and is_solid({
			y=p.h.y,
			x=p.h.x-p.w/2-1,
		})
		) do
			p.h.y -= 1
			update_character_w(p)
		end
		
end

function is_colide(x,y,w,inc_semi)
	local xs =  {x}
	if w then 
		xs = {}
		for dx=-w/2,w/2,7 do
			add(xs, x+dx)
		end
		add(xs, x+w/2)
	end
	
	for i,x2 in ipairs(xs) do
		local b,tile = is_solid({
			y=y,
			x=x2,
		},inc_semi)
		if b then
			return b,tile
		end
	end
	return false
end

function eject_particle(p, inc_semi, x, y)
	if not is_colide(p.x, p.y, p.w,inc_semi) then
		return
	end
	local ty1,ty2=p.y,p.y
	local tx1,tx2=p.x,p.x
	local i = 0
	while true do
	 ty1-=y
	 ty2+=y
	 tx1-=x
	 tx2+=x
		i+=1
	 local collide_ty1 = is_colide(p.x, ty1, p.w,inc_semi)
	 if not collide_ty1 then
	  p.y = ty1
	  break
	 end
	 local collide_ty2 = is_colide(p.x, ty2, p.w,inc_semi)
	 if not collide_ty2 then
	  p.y = ty2
	  break
	 end
	 local collide_tx1 = is_colide(tx1, p.y, p.w,inc_semi)
	 if not collide_tx1 then
	  p.x = tx1
	  break
		end
	 local collide_tx2 = is_colide(tx2, p.y, p.w,inc_semi)
	 if not collide_tx2 then
	  p.x = tx2
	  break
	 end

	end
end	

function update_particle(p, inc_semi)
	eject_particle(p, inc_semi, 1, 1)

	x_col = is_colide(p.x+p.dx,p.y,p.w)

	if not x_col then
		p.x += p.dx
	else
		p.dx *= -1
		p.dx *= p.bounce or 0
	end
	
	y_col,tile = is_colide(p.x,p.y+p.dy,p.w,inc_semi)
	
	if not y_col  then
		 p.y += p.dy
	else
		if(p.on_land ) then
			p.on_land(p)
		end
		if fget(tile, 7) and (p==player or p==player.h) then
			die()
		end
		p.dy *= -1
		p.dy *= p.bounce or 0
	end
end
-->8

-->8

function add_dust(ch, dy, dx,fullh, t, type)
	if(#dust > 50 or stat(7)<60) then
		deli(dust, 1)
	end
	add(dust, {
			x=ch.x
				+(rnd()-.5)*ch.w,
			y=ch.y - (fullh and rnd()*20 or 0) ,
			c=11,
			type=type,
			dx=(dx or 1)*(rnd()-.5)-.1*ch.dx,
			dy=2*(dy or -.7)*(rnd()*.5+.5),
			t=(t or 30)+flr(30*rnd()),
			bounce=.7,
			g=type!="coin" and .2 or -.1
		})
end

function update_dust()
		local s1=stat(1)
	
	if((time()*60)%2 > 1.5) then
		profile_cpu_usage+=stat(1)-s1
	
		return
	end
	foreach(dust, function(d)
		update_particle(d, d.dy>0)
		d.t -= 2
		d.dy += d.g
		if d.t < 0 then
			del(dust, d)
		elseif d.t < 15 then
			d.c = 5
		elseif d.t < 30 then
			d.c = 3
		end
	end)
	profile_cpu_usage+=stat(1)-s1
	
end

function draw_dust()
	foreach(dust, function(d)
		if d.t > 80 then
			spr(33, d.x-4,d.y-4) 
		elseif d.t > 75 then
			spr(34, d.x-4,d.y-4) 
		elseif d.t > 60 then
			spr(49, d.x-4,d.y-4)
		elseif d.t > 45 then
			spr(50, d.x-4,d.y-4)
		else
			pset(d.x,d.y,d.c)
		end
	end)
end
-->8

night={0,2,-4,1,
						0,5,6,8,
						-3,-1,12,12,
						1,14,15}
forest_pal={138,2,3,4,
						147,6,7,8,
						9,10,11,12,
						13,14,15}
day={-4,2,3,4,5,6,7,8,9,10,11,12,13,14,15}

level1={
	px=20,
	py=100,
	pal=forest_pal,
	{
		colide=false,
		rx=2,
		0,10,
		16,4,
		0,4
	},
	{
		colide=false,
		rx=2,ry=4,
		0,9,
		16,1,
		0,0
	},
	{
		colide=false,
		rx=2,ry=8,
		0,13,
		16,1,
		0,8
	},
	{
		tile=true,
		6,17,
		32,11,
		0,4
	},
	{
		rx=32,
		1,18,
		1,1,
		0,15
	},
	{
		tile=true,
		0,14,
		2,2,
		5,13
	},
	{
		tile=true,
		0,14,
		3,3,
		11,12
	},
	{
		tile=true,
		0,14,
		6,6,
		20,9
	},
	{
		tile=true,
		9,17,
		3,2,
		17,12
	},
}
level2={
	px=16,
	py=60,
	e={
	},
	{
			tile=true,
			0,23,--src
			15, 6,--size
			-1,4,--dst
	},
	{
			tile=true,
			3,17,--src
			2, 3,--size
			10,7,--dst`
	},
}
-->8

function is_solid(p,inc_semi)
	for b in all(blocks) do
		if b.colide != false then
			local x,w,h=p.x,
								b[3]*(b.rx or 1),
								b[4]*(b.ry or 1)
								
			if x/8 > b[5]
			and x/8 < b[5]+w
			then
				local y=p.y
				if b[7] then
					y -= b[7](p.x,t,b)
				end
				
				if y/8 > b[6]
				and y/8 < b[6]+h
				then
					if b.rx then
						x-=b[5]*8
						x%=b[3]*8
						x+=b[5]*8
					end
					if b.ry then
						y-=b[6]*8
						y%=b[4]*8
						y+=b[6]*8
					end
					local tile = is_solid_in_block(b,{
						x=x,
						y=y
					},inc_semi)
					if tile then
						return b, tile
					end
				end
			end
		end
	end
	return false
end

function is_solid_in_block(b, e,inc_semi)
	local x = e.x/8 + b[1] - b[5]
	local y = e.y/8 + b[2] - b[6]
	local tile = mget(x,y)
	if b.tile then
		local x,y=b[1]+1,b[2]+1
		if e.x/8-b[5] < 1 then
			x-=1
		elseif e.x/8-b[5] > b[3]-1 then
			x+=1
		end
		if e.y/8-b[6] < 1 then
			y-=1
		elseif e.y/8-b[6] > b[4]-1 then
			y+=1
		end
		tile = mget(x,y)
	end
	if fget(tile, 2) then
		if(not inc_semi) return false
		if(e.y % 8 > 4) return false
		return tile
	end
	if fget(tile, 0) then
		if(e.y % 8 < 5) return false
		return tile	end
	if fget(tile, 3) then
		return tile
	end
	
	return false
end

function draw_blocks()
	for b in all(blocks) do
	for ox=0,(b.rx or 1)-1 do --horizontal repeats 		
		for oy=0,(b.ry or 1)-1 do --vertical repeats
			if b[7] then
				for i=0,b[3]*8-1 do
					local x=b[5]*8+i
					y1=b[6]*8+b[7](x,t,b)
					y2=(b[6]+b[4])*8+b[7](x,t,b)-1
					tline(x,y1,x,y2,
						b[1]+i/8,b[2],
						0,1/8)
				end
			elseif b.tile then
				local i_min = max(0, ceil((cam_x - b[5]*8)/8)-1)
				local j_min = max(0, ceil((cam_y - b[6]*8)/8)-1)
				for i=i_min, min(b[3]-1, flr((cam_x+128-b[5]*8)/8)) do
    for j=j_min, min(b[4]-1, flr((cam_y+128-b[6]*8)/8)) do
						local sx,sy = 
							b[1]+(i==0 and 0 or 1)+(i==(b[3]-1) and 1 or 0),
							b[2]+(j==0 and 0 or 1)+(j==(b[4]-1) and 1 or 0)
						local n = 1//2
						local s=mget(sx,sy)
						if s!=0 then
							spr(s,
								(b[5]+i)*8,
								(b[6]+j)*8
							)
						end
					end
				end
				else
				map(b[1],--src x
				 b[2], --src y
				 b[5]*8+ox*b[3]*8, --screen x
				 b[6]*8+oy*b[4]*8, --screen y
				 b[3], --width
				 b[4] --height
				)
			end
		end
	end
	end
end

function calc_cam_bounds()
	cam_bounds = {1000,-1000,1000,-1000}
	for b in all(blocks) do
		if cam_bounds[1] > b[5]*8 then
			cam_bounds[1] = b[5]*8
		end
		if cam_bounds[2] < (b[5]+b[3]*(b.rx or 1))*8 -128 then
			cam_bounds[2] = (b[5]+b[3]*(b.rx or 1))*8 -128
		end
		if cam_bounds[3] > b[6]*8 then
			cam_bounds[3] = b[6]*8
		end
		if cam_bounds[4] < (b[6]+b[4]*(b.ry or 1))*8-128 then
			cam_bounds[4] = (b[6]+b[4]*(b.ry or 1))*8-128 
		end
	end 
end

function load_level(level)
	blocks=level
	calc_cam_bounds()
	player.x = level.px or player.x
	player.y = level.py or player.y
	player.h.x = player.x
	player.h.y = player.y+player.size
	player.dx = 0
	player.dy = 0
	player.h.dx = 0
	player.h.dy = 0
	
	enemies={}
	coins={}
	for e in all(level.e or {}) do
		spawn_enemy(e)
	end
	for c in all(level.c or {}) do
		if 	dget(c.id) == 0 then
			spawn_coin(c)
		end
	end
	
	cam_x = player.x - 64
	cam_y = player.y - 100
end
function spawn_coin(c)
	add(coins, {
		x=c.x,
		y=c.y,
		w=16,
		dx=0,
		id=c.id
	})
end

function spawn_enemy(e)
	add(enemies, {
		x=e.x,
		y=e.y,
		maxx=e.maxx,
		minx=e.minx,
		dx=0,
		dy=0,
		w=8,
		bounce=0,
		size=12,
		tsize=12,
		speed=0.07,
		jumpf=-4.5,
		h={
			x=e.x,
			y=e.y-12,
			dx=0,
			dy=0,
			w=12,
		},
		last_gnded=0,
		was_gnded=false,
	})
end	


function _init()
	cartdata("bb")
	init()
	for i = 0,64 do
		if dget(i)==1 then
			coins_collected+=1	
			coin_at=time()		
		end
	end
end
__gfx__
00000000111100000000111111111000000111110000000000000000500000000000000000000005111333333333331111111000000111110000000000000000
0000000011503bbbbbb30511111009999770011100000000000000000b33b33b3b33b33b3b33b3301333333b3333333111100999977001110000000000000000
0070070015bbbb67bbbbb35111099aaa77a9701100000000000000000443433444434334444343303333abbbb3bbab3111099aaa77a970110000000000000000
0007700010bbb7776bbbb3011099a4499447770100000000000000000444449944444499444444f0333bb3bbbbbbba311099a449944777010000000000000000
0007700003bbb6777bbbbb30109a99779979790100000000000000000444444994444449944444f033b3b3bbbbbbbb31109a9977997979010000000000000000
007007000bbbbb76bbbbbb3004a9977997774a9000000000000000000944444499444444994444f03333bbbbbbbbbb3304a9977997774a900000000000000000
000000000bb76bbbbbbbbb3004a9779977794a9000000000000000000994444449944444499444f0333b3b3bbb3b3b3304a9779977794a900000000000000000
000000000bb67bbbbbbbbb3004a7799777994a9000000000000000000499444444994444449944f03333b3b3b3b3b33304a7799777994a900000000000000000
111111110bbbbbbbbbbbbb300977997779994a9044499444444994440449944444499444444994f0333b3b3b3b3b3b330977997779994a900000000000000000
111111110bbbbbbbbbbbb3300999977799a94a9044449944444499440444994444449944444499f033333333333333330999977799a94a900000000000000000
111111110bbbbbbbbbbbb330049977799a994a9044444994444449940444499444444994444449a03333333333333333049977799a994a900000000000000000
1111111103bbbbbbbbbb333010977799a999a90144444499444444990444449944444499444444a0133333333333333110977799a999a9010000000000000000
11111111033bbbbbbbb3333010977999999a9901944444f0044444490444444994444449944444f0111154499451111110977999999a99010000000000000000
11111111053333333333335011094aaaaaa99011994444f0094444440944444499444444994444f0111154499451111111094aaaaaa990110000000000000000
1111111110553333333355011110044444400111499444f0099444440994444449944444499444f0111154499951111111100444444001110000000000000000
1111111111000000000000111111100000011111449944f0049944440499444444994444449944f0111544999945111111111000000111110000000000000000
111011101100001111111111aaaaaaaa11153311444994f0044994440449944444499444444994f01111111001111111dddddddd000000000000000000000000
010101011049aa511110011199aaa99a153333514444994b334499440444994444449944444499f011111103b0111111d6777777000000000000000000000000
101010100499779011099411999999995333ab31444449333b3449940444499444444994444449a01111110330111111d6777777000000000000000000000000
01010101049997901049790188999889333bba3144444493434444990440049004400490044004a01111100530011111d6666666000000000000000000000000
0000000054999990154499018888888833b3bb3194444449944444491001100110011001100110011110044449a00111dddddddd000000000000000000000000
000000005449994011544011888888885333bb339944444499444444111111111111111111111111110949949a9aa0117777d677000000000000000000000000
00000000154444011115011188888888333b3b3349944444499444441111111111111111111111111094994999a9aa017777d677000000000000000000000000
000000001155001111111111888888885333b33344994444449944441111111111111111111111110949949999499aa06666d666000000000000000000000000
0000000011111111111111118888888833333b331111111105ddd60110010010010010010010010009499499999a949011111111000000000000000000000000
00000000111111111111111188888888533333331110111105dd670104904904904904904904904909499499999a949031111111000000000000000000000000
00000000111041111111111188888888333333331107011110dd60110440440440440440440440440449949999499490b33b3111000000000000000000000000
00000000110974111111411188888888153553511106011110567011100100100100100100100100044494999949949053111b11000000000000000000000000
000000001154901111159411888888881154951110567011110601111111111111111111111111110444949999494990131149a1000000000000000000000000
000000001115011111115111888888881154951110dd601111070111111111111111111111111111054449499494999013144999000000000000000000000000
000000001111111111111111888888881154951105dd670111101111111111111111111111111111105454444445990113144494000000000000000000000000
000000001111111111111111888888881549995105ddd60111111111111111111111111111111111110000000000001131115541000000000000000000000000
50000000000000000000000550000005555555555555555510000000000000000000000199949499111111111111116666111111111111110000000000000000
07767776677767766777667007766670555555555555555504999994999999949999997049999949111111111111116666111111111111110000000000000000
0d65666556665665566656700d655670555655555555555505444444444444444444449095555594111111111166661661666611111111110000000000000000
0d65555555555555555555600d655560555555665665565590000000000000000000000445555594111111111666666666666661111111110000000000000000
0055655d555655655555567000555670555555665665555594944444444444444444444545555594111111116666666666666666111111110000000000000000
0d65555555555555556556700d655670555665555555555599445454545454545454545445555594111111116666666666666666111111110000000000000000
0d65565556555555555556700d6556705556655ddd56655595454545454545454545454545555595111111116666666666666666111111110000000000000000
0055555555555555d555556000555560555555600d56655594555555555555555555555554444455111111166666666666666666611111110000000000000000
00555555555555555555556000555560555665600d55555599999999999999999999954599999999111116616666666650000005166111111111111100000000
0d665d5555555555555556700d665670555665566556655599494949494949494949495549494949111166666666666604444440666611111111111100000000
0d66556555555555556556700d6656705555555555566555949494949494949494949545949494941116666666666666059f9940666661111133111100000000
0d66555555555555555555600d665560555556656655555599444444444444444444445544444444111666666666666604944f40666661113313331100000000
00555555555555555555667000556670556556656655555594944444444444444444454544499944166166666666666605944940666616613333313300000000
0d655655d5555555565d66700d65667055555555555565559944545454545454545454554455559466666666666666660499f9406666666613b3333300000000
0d65555555555555555566700d65667055555555555555559545454545454545454545454555555966666666666666660545454066666666333333b300000000
005555555555d5555555556000555560555555555555555594555555555555555555555545555559666666666666666650000005666666663333333300000000
00555655555555655565667000556670500000000000000544444444545445444494494945555559333333333333333333333333333333333333433300000000
0d65555555555555555566700d656670077767766777677045544554545445444494494945555559333333333333333333333333333343333333333300000000
0d65555555655555555555600d65556000665665566656605555555554544544449449494555555933333333b3333333333333b3343435343434393900000000
005555655555565556d5567000555670005555555555556054455445545445444494494945555559333333333333333333333333535343434393434300000000
0d66555555555555555556700d6656700d6566555565557044444444545445444494494945555559333333333313333333333331343435343434393900000000
0d66566556656665566655600d6655600d656655555565704554455454544544449449494555555933333333133333333333b331545445444494494300000000
00000dd00dd0ddd00ddd0060000000600055555ddd55566055555555545445444494494945555559333333331133333b33333331345435444394434900000000
50000000000000000000000550000005005555600d55566054455445545445444494494945555559333333331131333333331311543445434493494900000000
50000000000000000000000511111111005555600d55557050000000000000000000000511111111333333331113333313313111111111111111111100000000
077677766777677667776600111111110d6566566555557003b3bb3b333b33b33b333b30151415143b3333331111113333111111111111111111111100000000
0d6566655666566556665600111111110d656655556655700535335535535555553535505151515133333b311111111111111111111111111111111100000000
0d6555555555555555555500111111110d655555556656600d555555555555555555556014151415331333331111111111111111111111331111111100000000
0d66555555555555555556705000000500555555555556600555655d555655655555567044444444113331331111111111111111111113331131113100000000
0d66566556656665566655600776667000566655665665700d655555555555555565567045544554111133111111111111111111331113311131113100000000
00000dd00dd0ddd50ddd00600d655670000ddd00dd0d0d700d655655565555555555567055555555111111111111111111111111333133311131313100000000
5000000000000000000000050d65556050000000000000050055555555555555d555556054455445111111111111111111111111133133113131333300000000
08080808080808080808080808080808080808080808080000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
83838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383
83838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383
53535353000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
53535353000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
53535353000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
56d55670uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
57555777u777u777uu77uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
57665767u7uuu7u7u7uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
07770767u77uu777u777uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
07070707u7uuu7uuuuu7uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu6uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
u777u777u7uuu7uuu77uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu6666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu6666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
u7u7u7u7uuuuu777u777u777uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu6666u66u6666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
u7u7uuu7uuuuu777u7uuu777uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu66666666666666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
u777uu7uuuuuu7u7u77uu7u7uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu6666666666666666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
uuu7u7uuuuuuu7u7u7uuu7u7uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu6666666666666666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
uuu7u7u7uuuuu7u7u777u7u7uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu6666666666666666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
uuuuuuuuuuuuuuuu6uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu666666666666666666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
u7uuu7u7uuuuuu77u777u7u7uuuuuu7uu7u7u777u77uu777u777u777uu7uu66u6666666666666666u66uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
u7uuuuu7uuuuu7uuu7u7u7u7uuuuu7uuu7u7u7u7u7u7u7u7uu7uu7uuuuu7666666666666666666666666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
u777uu7uuuuuu7uuu777u7u7uuuuu7uuu7u7u777u7u7u777uu7uu77uuuu76666666666666666666666666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
u7u7u7uuuuuuu7uuu7uuu7u7uuuuu7uuu7u7u7uuu7u7u7u7uu7uu7uuuuu76666666666666666666666666uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
u777u7u7uuuuuu77u7uuuu77uuuuuu7uuu77u7uuu777u7u7uu7uu777u67u666666666666666666666666u66uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu60000666666666666666600006666666uuuuuuuuu0000uuuuuuuuuuuuuuuuuuuuuuuuuuu
u777u777u7u7uuuuuu77u777u7u7uuuuuu7uu77uu777u777u7u7uu7009997006666666666660099970066666uuuuuuu00999700uuuuuuuuuuuuuuuuuuuuuuuuu
u7uuu7u7uuu7uuuuu7uuu7u7u7u7uuuuu7uuu7u7u7u7u7u7u7u7uuu79aa779706666666666699aa7797066666uuuuuu99aa77970uuuuuuuuuuuuuuuuuuuuuuuu
u777u777uu7uuuuuu7uuu777u7u7uuuuu7uuu7u7u77uu777u7u7uu07a4994777666666666609a4994777666666uuuu09a4994777uuuuuuuuuuuuuuuuuuuuuuuu
uuu7uuu7u7uuuuuuu7uuu7uuu7u7uuuuu7uuu7u7u7u7u7u7u777uu079979997966666666660a99799979666666uuuu0a99799979uuuuuuuuuuuuuuuuuuuuuuuu
u777uuu7u7u7uuuuuu77u7uuuu77uuuuuu7uu777u7u7u7u7u77760799799774a0666666660499799774a06666u6660499799774a0uuuuuuuuuuuuuuuuuuuuuuu
uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu66660497797794a0666666660497797794a0666666660497797794a0uuuuuuuuuuuuuuuuuuuuuuu
u777u7u7uuuuuu77u777u7u7uuuuuu7uu777u777uu77u777677767477777797a0666666660477977794a0666666660477977794a0uuuuuuuuuuuuuuuuuuuuuuu
u7u7uuu7uuuuu7uuu7u7u7u7uuuuu7uuu7u7u7u7u7u7u7uu66766797977799470666666660979977994a0666666660979977994a0uuuuuuuuuuuuuuuuuuuuuuu
u7u7uu7uuuuuu7uuu777u7u7uuuuu7uuu777u77uu7u7u77u66766799977999470666666660999779994a0666666660999779994a0uuuuuuuuuuuuuuuuuuuuuuu
u7u7u7uuuuuuu7uuu7uuu7u7uuuuu7uuu7uuu7u7u7u7u7u6667667497799a9470666666660497799a94a0666666660497799a94a0uuuuuuuuuuuuuuuuuuuuuuu
07770707uuuuuu77u7uuuu77uuuuuu7uu7uuu7u7u77uu76u6777677777779979666666666607779a99a9666666666607779a99a9uuuuuuuuuuuuuuuuuuuuuuuu
3b333b30uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu66666666660779999a9966666666660779999a9966666666660779999a99uuuuuuuuuuuuuuuuuuuuuuuu
57353777u7u7uuuuuu77u777u7u7uuuuuu7uu777uu776777677767694a7aa9906666666666694aaaa9906666666666694aaaa990uuuuuuuuuuuuuuuuuuuuuuuu
57555567uuu7uuuuu7uuu7u7u7u7uuuuu7uuuu7uu7u766766767676004474006666666666660044440066666666666600444400uuuuuuuuuuuuuuuuuuuuuuuuu
57775677uu7uuuuuu7uuu777u7u7uuuuu7uuuu7uu767667667776766600706666666666666666000066666666666666660000666uuuuuuuuuuuuuuuuuuuuuuuu
57675677u7uuuuuuu7uuu7uuu7u7uuuuu7uuuu7u6767667667676766666766666666666666666666666666666666666666666666uuuuuuuuuuuuuuuuuuuuuuuu
57775677u7u7uuuuuu77u7uuuu77uuuuuu7uuu7u6776667667676777667666666666666666666666666666666666666666666666uuuuuuuuuuuuuuuuuuuuuuuu
d5555560uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu666666666666666666666666666666666666666666666666666666666666666666uuuuuuuuuuuuuuuuuuuuuuu
5777677700770777uuuuuuuuuuuuuuuuuuuuuu66666666666666666666653366666666666666666666666666666666666666666666uuuuuuuuuuuuuuuuuuuuuu
5576675637333b70uuuuuuuuuuuuuuuuuuuuuu66666666666666666665333356666666666666666666666666666666666666666666uuuuuuuuuuuuuuuuuuuuuu
5575577557773570uuuuuuuuuuuuuuuuuu6666u666666666666666665333ab3666666666666666666666666666666666666666666u6666uuuuuuuuuuuuuuuuuu
5575576555575570uuuuuuuuuuuuuuuuu66666666666666666666666333bba3666666666666666666666666666666666666666666666666uuuuuuuuuuuuuuuuu
5575577757755670uuuuuuuuuuuuuuuu66666666666666666666666633b3bb36666666666666666666666666666666666666666666666666uuuuuuuuuuuuuuuu
5555555555655670uuuuuuuuuuuuuuuu6666666666666666666666665333bb33666666666666666666666666666666666666666666666666uuuuuuuuuuuuuuuu
5555555555555670uuuuuuuuuuuuuuuu666666666666666666666666333b3b33666666666666666666666666666666666666666666666666uuuuuuuuuuuuuuuu
55555555d5555560uuuuuuuuuuuuuuu66666666666666666666666665333b3336666666666666666666666666666666666666666666666666uuuuuuuuuuuuuu6
555555555556656000000005uuuuu66u66666666666666666666666633333b33666666666666666666666666666666666666666666666666u66uuuuuuuuuu66u
55555555555665563b333b30uuuu6666666666666666666666666666533333336666666666666666666666666666666666666666666666666666uuuuuuuu6666
555555555555555555353550uuu666666666666666666666666666663333333366666666666666666666666666666666666666666666666666666uuuuuu66666
555555555555566555555560uuu666666666666666666666666666666535535666666666666666666666666666666666666666666666666666666uuuuuu66666
555555555565566555555670u66u6666666666666666666666666666665495666666666666666666666666666666666666666666666666666666u66uu66u6666
d5555555555555555565567066666666666666666666666666666666665495666666666666666666666666666666666666666666666666666666666666666666
55555555555555555555567066666666666666666666666666666666665495666666666666666666666666666666666666666666666666666666666666666666
5555d55555555555d555556066666666666666666666666666666666654999566666666666666666666666666666666666666666666666666666666666666666
55555555555555555555556066666666666666666666666650000000000000000000000000000005666666666666666666666666666666666666666666666666
5555555555555555555556706666666666666666666666660b33b33b3b33b33b3b33b33b3b33b330666666666666666666666666666666666666666666666666
55555555555555555565567066666666666666666666666604434334444343344443433444434330666666666666666666666666666666666666666666666666
555555555555555555555560666666666666666666666666044444994444449944444499444444f0666666666666666666666666666666666666666666666666
555555555555555555556670666666666666666666666666044444499444444994444449944444f0666666666666666666666666666666666666666666666666
d5555555d5555555565d6670666666666666666666666666094444449944444499444444994444f0666666666666666666666666666666666666666666666666
555555555555555555556670666666666666666666666666099444444994444449944444499444f0666666666666666666666666666666666666666666666666
5555d5555555d55555555560666666666666666666666666049944444499444444994444449944f0666666666666666666666666666666666666666666666666
555555555555555555555560666666666666666666666666044994444449944444499444444994f0666333333333336666666666666666666666666666666666
555555555555555555555670666666666666666666666666044499444444994444449944444499f06333333b3333333666666666666666666666666666666666
555555555555555555655670666666666666666666666666044449944444499444444994444449a03333abbbb3bbab3666666666666666666666666666666666
555555555555555555555560666666666666666666666666044444994444449944444499444444a0333bb3bbbbbbba3666666666666666666666666666666666
555555555555555555556670666666666666666666666666044444499444444994444449944444f033b3b3bbbbbbbb3666666666666666666666666666666666
d5555555d5555555565d6670666666666666666666666666094444449944444499444444994444f03333bbbbbbbbbb3366666666666666666666666666666666
555555555555555555556670666666666666666666666666099444444994444449944444499444f0333b3b3bbb3b3b3366666666666666666666666666666666
5555d5555555d55555555560666666666666666666666666049944444499444444994444449944f03333b3b3b3b3b33366666666666666666666666666666666
555555555555555555555560666666666666666666666666044994444449944444499444444994f0333b3b3b3b3b3b3366666666666666666666666666666666
555555555555555555555670666666666666666666666666044499444444994444449944444499f0333333333333333366666666666666666666666666666666
555555555555555555655670666666666666666666666666044449944444499444444994444449a0333333333333333366666666666666666666666666666666
555555555555555555555560666666666666666666666666044444994444449944444499444444a0633333333333333666666666666666666666666666666666
555555555555555555556670666666666666666666666666044444499444444994444449944444f0666654499456666666666666666666666666666666666666
d5555555d5555555565d6670666666666666666666666666094444449944444499444444994444f0666654499456666666666666666666666666666666666666
555555555555555555556670666666666666666666666666099444444994444449944444499444f0666654499956666666666666666666666666666666666666
5555d5555555d55555555560666666666666666666666666049944444499444444994444449944f0666544999945666666666666666666666666666666666666
55555555555555555555556066666666666666666666666604499444444994444449944450000000000000000000000000000005666666666666666666666666
5555555555555555555556706666666666666666666666660444994444449944444499440b33b33b3b33b33b3b33b33b3b33b330666666666666666666666666
55555555555555555565567066666666666666666666666604440004444449944444499404434334444343344443433444434330666666666666666666666666
555555555555555555555560666666666666666666666666044400094444449944444499044444994444449944444499444444f0666666666666666666666666
555555555555555555556670666666666666666666666666044033b09444444994444449044444499444444994444449944444f0666666666666666666666666
d5555555d5555555565d6670666666666666666666666666094033309944444499444444094444449944444499444444994444f0666666666666666666666666
555555555555555555556670666666666666666666666666090055300994444449944444099444444994444449944444499444f0666666666666666666666666
5555d5555555d55555555560666666666666666666666666040055300499444444994444049944444499444444994444449944f0666666666666666666666666
55555555555555555555556066666666666533666666666600444449a009944444499444044994444449944444499444444994f0666666666666666666666666
5555555555555555555556706666666665333356666666609499449a9aa0994444449944044499444444994444449944444499f0666666666666666666666666
555555555555555555655670666666665333ab366666660949949999a9aa099444444994044449944444499444444994444449a0666666666666666666666666
55555555555555555555556066666666333bba366666660949949999a9aa049944444499044444994444449944444499444444a0666666666666666666666666
5555555555555555555566706666666633b3bb366666009499499999499aa00994444449044444499444444994444449944444f0666666666666666666666666
d5555555d5555555565d6670666666665333bb3366660094994999999a94900499444444094444449944444499444444994444f0666666666666666666666666
55555555555555555555667066666666333b3b3366660094994999999a94900449944444099444444994444449944444499444f0666666666666666666666666
5555d5555555d55555555560666666665333b33366660094994999999a94900444994444049944444499444444994444449944f0666666666666666666666666
5555555555555555555555606666666633333b3366660044994999994994900444499444044994444449944444499444444994f0666666666666666666666666
555555555555555555555670666666665333333366660044494999994994900444449944044499444444994444449944444499f0666666666666666666666666
555555555555555555655670666666663333333366660044494999994949900444444994044449944444499444444994444449a0666666666666666666666666
555555555555555555555560666666666535535666660054449499949499900944444499044444994444449944444499444444a0666666666666666666666666
555555555555555555556670666666666654956666660054449499949499900994444449044444499444444994444449944444f0666666666666666666666666
d5555555d5555555565d6670666666666654956666666605454444444599044499444444094444449944444499444444994444f0666666666666666666666666
555555555555555555556670666666666654956666666660000000000000444449944444099444444994444449944444499444f0666666666666666666666666
5555d5555555d55555555560666666666549995666666666049944444499444444994444049944444499444444994444449944f0666666666666666666666666
555555555555555555555560000000000000000000000000000000000000000000000000000000000000000544499444444994f0666666665000000000000000
5555555555555555555556703b33b33b3b33b33b3b33b33b3b33b33b3b33b33b3b33b33b3b33b33b3b33b33044449944444499f0666666660b33b33b3b33b33b
555555555555555555655670444343344443433444434334444343344443433444434334444343344443433044444994444449a0666666660443433444434334
55555555555555555555556044444499444444994444449944444499444444994444449944444499444444f044444499444444a0666666660444449944444499
55555555555555555555667094444449944444499444444994444449944444499444444994444449944444f094444449944444f0666666660444444994444449
d5555555d5555555565d667099444444994444449944444499444444994444449944444499444444994444f099444444994444f0666666660944444499444444
55555555555555555555667049944444499444444994444449944444499444444994444449944444499444f049944444499444f0666666660994444449944444
5555d5555555d5555555556044994444449944444499444444994444449944444499444444994444449944f044994444449944f0666666660499444444994444
555555655555556555656670444994444449944444499444444994444449944444499444444994f0000000000000000000000000000000000000000004499444
5555555555555555555566704444994444449944444499444444994444449944444499444444994b3b33b33b3b33b33b3b33b33b3b33b33b3b33b33b33449944
5565555555655555555555604444499444444994444449944444499444444994444449944444493344434334444343344443433444434334444343343b344994
555556555555565556d5567044444499444444994444449944444499444444994444449944444493444444994444449944444499444444994444449943444499
55555555555555555555567094444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449
56656665566566655666556099444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444
0dd0ddd00dd0ddd00ddd006049944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444
00000000000000000000000544994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444
44499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444
44449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944
44444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994
44444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499
94444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449
99444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444
49944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444
44994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444
00000000000000000000000544499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444
333b33b3333b33b33b333b3044449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994444449944
35535555355355555535355044444994444449944444499444444994444449944444499444444994444449944444499444444994444449944444499444444994

__gff__
00000106020a00060606000006020000000101020a02020202020000020a00000001010a0002020202020000000000000001010000818a0606060000000000000a0a0a0a0a0a060606000000000000000a0a0a0a0a0a0000000000000a0000000a0a0a0a0a0a020000000000000000000a0a0a010a0a0a0a0a02000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
2a2b000102000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3a3b001112000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
101010104b4c4d10101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10104a4b5b5b4c4d101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
104a5a5b5b5b5b5d101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4a4b5b5b5b5b5b5b5d4d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5a5b5b5b5b5b5b5b5b5d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6d6e6a6a6a6a6a6d6e6a6a6a6a6a6a6a6a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67686a6a6a6a6a67686a6a6a6a6a6a6a6a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67686a6c7a6b6a67686a6a6a6a6c7a6b6a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67686c7c107b6b67686c7a6b6c7c107b6b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67687c1010107b676800107b7c1010107b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6768101010101067681010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7677785210101010503738390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5051525210101010500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5551545477787677550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7677787979795200500708090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5051526666665200501718190000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6061626666665477551718190000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100001505016050180501a0501c0501e0502205027050261501600016000160001600017000330000000035000380003900000000000000000013000000000000000000000000000000000000000000000000
0001000023150211501c15016150121500d1500c15013000130001b60013000130000000013000130001300013000000000000000000000000000000000000000000000000000000000000000000000000000000
0004000d0f3501435017350183501835016350103500d3500a3500a3500c3500e3501135015350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000308000e65011640146401763019620146100d6100b600096000960000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00020700323502c350293502735025350213503030034550365503855000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000a000e2755027550275501d550275502755027550275501c5502755027550275502755027550216500000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000f00081300026350000002b3501a350000001935000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0006080000000270502a0502c0503005032050370503b0503f0500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 06074344

